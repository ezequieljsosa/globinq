# Generated by Django 2.2.4 on 2019-08-05 04:21

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.TextField()),
                ('sequence_red', models.TextField()),
                ('openness', models.FloatField(null=True)),
                ('e_bar_contrib', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Globin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniprot', models.TextField(null=True)),
                ('name', models.TextField()),
                ('globin_group', models.TextField()),
                ('sequence', models.TextField(default='')),
                ('aln_id', models.TextField(null=True)),
                ('aln_seq', models.TextField(null=True)),
                ('active_site', models.TextField()),
                ('active_site_red', models.TextField()),
                ('timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('p50', models.FloatField(null=True)),
                ('k_on_o2_pred', models.FloatField(null=True)),
                ('k_off_o2_pred', models.FloatField(null=True)),
                ('removed', models.BooleanField(default=False)),
                ('closest_curated', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='non_curated', to='globinq.Globin')),
                ('e7_portal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e7_portal', to='globinq.Channel')),
                ('g8_channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='g8_channel', to='globinq.Channel')),
                ('l_channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='l_channel', to='globinq.Channel')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='globins', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('rank', models.TextField()),
                ('with_globin', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='globinq.Tax')),
            ],
        ),
        migrations.CreateModel(
            name='PosInsertion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('g_position', models.TextField()),
                ('insertions', models.IntegerField()),
                ('globin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insertions', to='globinq.Globin')),
            ],
        ),
        migrations.CreateModel(
            name='PDB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdb', models.TextField()),
                ('description', models.TextField(default='')),
                ('organism', models.TextField(default='')),
                ('chain', models.TextField()),
                ('aln_seq', models.TextField(null=True)),
                ('globin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='structures', to='globinq.Globin')),
                ('tax', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='structures', to='globinq.Tax')),
            ],
        ),
        migrations.CreateModel(
            name='IndexKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.TextField()),
                ('globin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='keywords', to='globinq.Globin')),
            ],
        ),
        migrations.CreateModel(
            name='GlobinPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seq_pos', models.IntegerField()),
                ('g_position', models.TextField()),
                ('globin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='globinq.Globin')),
            ],
        ),
        migrations.CreateModel(
            name='GlobinPDBPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdb_res_id', models.TextField()),
                ('order', models.IntegerField(null=True)),
                ('globin_pos', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='residues', to='globinq.GlobinPosition')),
                ('pdb', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='globinq.PDB')),
            ],
        ),
        migrations.AddField(
            model_name='globin',
            name='tax',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='globins', to='globinq.Tax'),
        ),
        migrations.CreateModel(
            name='ExperimentalData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_red', models.TextField()),
                ('k_on_o2_exp', models.FloatField()),
                ('k_off_o2_exp', models.FloatField(null=True)),
                ('globin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experimental', to='globinq.Globin')),
            ],
        ),
        migrations.CreateModel(
            name='Contribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ctype', models.TextField(choices=[('exp', 'exp'), ('pdb', 'pdb')])),
                ('paper', models.TextField(default='')),
                ('description', models.TextField(default='')),
                ('creation', models.DateTimeField()),
                ('last_update', models.DateTimeField()),
                ('removed', models.BooleanField(default=False)),
                ('experimental', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contribuited', to='globinq.ExperimentalData')),
                ('pdb', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contribuited', to='globinq.PDB')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contributions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
